name: Notify for Inactive Branches

on:
  schedule:
    - cron: "0 8 1 * *"  # At 8:00 AM at the start of every month
  workflow_dispatch:  # Allow manual triggering of the action

jobs:
  check-inactive-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Inactive Branches
        id: get-inactive-branches
        run: |
          git fetch --all
          current_date=$(date +%s)  # Get current UNIX timestamp (seconds)
          echo "Inactive branches exceeding 30 days:" > inactive_branches.txt

          # Fetch branch names and last commit dates
          git for-each-ref --sort=-committerdate --format='%(refname:short) %(committerdate:unix)' refs/heads/ | while IFS= read -r line; do
            # Debugging: Output the raw line being processed
            echo "Processing line: $line"

            branch_name=$(echo "$line" | awk '{print $1}')
            branch_date=$(echo "$line" | awk '{print $2}')

            echo "Extracted branch name: $branch_name"
            echo "Extracted branch date: $branch_date"

            # Skip empty or invalid lines
            if [ -z "$branch_name" ] || [ -z "$branch_date" ] || ! [[ "$branch_date" =~ ^[0-9]+$ ]]; then
              echo "Skipping invalid or empty line: $line"
              continue
            fi

            # Calculate branch age
            branch_age_in_seconds=$((current_date - branch_date))
            branch_age_in_minutes=$((branch_age_in_minutes / (60)))
            branch_age_in_hours=$((branch_age_in_seconds / (60 * 60)))
            branch_age_in_days=$((branch_age_in_seconds / (60 * 60 * 24)))

            # Debugging: Echo branch age
            echo "Branch: $branch_name"
            echo "Age in minutes: $branch_age_in_hours"
            echo "Age in hours: $branch_age_in_hours"
            echo "Age in days: $branch_age_in_days"

            # Add inactive branches to the list
            if [ "$branch_age_in_days" -gt 30 ]; then
              echo "- $branch_name (inactive for $branch_age_in_days days)" >> inactive_branches.txt
            fi
          done

          # Check if the output file has content
          if [ -s inactive_branches.txt ]; then
            echo "Inactive branches found:"
            cat inactive_branches.txt
            inactive_branches=$(cat inactive_branches.txt | tr '\n' '|')
            echo "inactive_branches=$inactive_branches" >> $GITHUB_ENV
          else
            echo "No inactive branches found."
            echo "inactive_branches=None" >> $GITHUB_ENV
          fi

      - name: Send Email Notification
        if: steps.get-inactive-branches.outputs.inactive_branches != 'None'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587 # Default SMTP port / 465 for SSL
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Inactive Git Branches Notification
          to: "ali.hammoud@et3arraf.com"
          from: "ali.hammoud@et3arraf.com"
          body: |
            Hello Team,

            The following branches have been inactive for over 30 days:

            ${{ steps.get-inactive-branches.outputs.inactive_branches }}

            Please review and take appropriate action.

            Regards,  
            Ali Hammoud (DevOps Engineer)
